name: Build, Test, Deploy, Verify
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build_test_deploy_verify:
    if: github.event.pull_request.draft != true
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.47.2-noble
    environment: ${{ github.ref_name == 'main' && 'production' || 'staging' }}
    # services:
    #   postgres:
    #     image: postgres
    #     env:
    #       POSTGRES_PASSWORD: postgres
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    env:
      BASE_URL: ${{ vars.BASE_URL }}
      DATABASE_URL: ${{ vars.DATABASE_URL }}
      FIREBASE_AUTH_EMULATOR_HOST: "127.0.0.1:9099"
      GOOGLE_APPLICATION_CREDENTIALS: "/opt/gcp_key.json"
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ vars.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ vars.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ vars.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      TEST_DATABASE_URL: ${{ vars.TEST_DATABASE_URL }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      # - uses: actions/setup-java@v4
      #   with:
      #     distribution: "microsoft"
      #     java-version: "17"
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - uses: tmshkr/ngrok-ssh@latest
        with:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
          WAIT_FOR_CONNECTION: true
      - name: Setup
        run: |
          npm ci
          npm i -g firebase-tools vercel
          # su -c "apt-get update && apt-get install tmux -y"
          echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > /opt/gcp_key.json
          firebase use ${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          touch .wait
      # - name: Test Firebase Functions
      #   run: npm run test --workspace functions
      - uses: tmshkr/handle-env@v1.2
        with:
          filename: apps/functions/.env
          env: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            PRISMA_QUERY_ENGINE_LIBRARY="lib/libquery_engine-debian-openssl-3.0.x.so.node"
      - name: Deploy
        run: |
          tmux new-session -d -s deploy
          tmux send-keys -t deploy 'npm run deploy' C-m
      # - name: Cleanup
      #   if: always()
      #   run: shred -uv /opt/gcp_key.json
